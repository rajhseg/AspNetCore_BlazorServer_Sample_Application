@using WebBlazorApp.Models

@if (ShowPopup)
{
    <div class="modal show" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" style="display:block">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">@Header</h5>
                    <button type="button" class="close" data-dismiss="modal" @onclick="Cancel" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @Message
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="Cancel" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" @onclick="ConfirmOK">Ok</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private bool ShowPopup { get; set; }

    private RenderFragment Message { set; get; }

    private RenderFragment Header { set; get; }

    private object Data { get; set; }

    [Parameter]
    public EventCallback<ModalObj> ConfirmCallback { set; get; }

    private void ConfirmOK(){
        this.ShowPopup = false;
        ConfirmCallback.InvokeAsync(new ModalObj { IsConfirm = true, Data = this.Data });
    }

    private void Cancel(){
        this.ShowPopup = false;
        ConfirmCallback.InvokeAsync(new ModalObj { IsConfirm = false, Data = this.Data });
    }

    public void ShowModal(Object data, RenderFragment header, RenderFragment message){
        this.Message = message;
        this.Data = data;
        this.Header = header;
        this.ShowPopup = true;
    }
}
